<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="boardMapper">

	<resultMap 				id="boardResultMap" type="BoardDto">
		<id 				column="board_no" 			property="boardNo" />
		<result 		column="regist_emp" 		property="registEmp" />
		<result 		column="modify_emp" 		property="modifyEmp" />
		<result 		column="regist_date" 		property="registDate" />
		<result 		column="modify_date" 		property="modifyDate" />
		<result 		column="board_title" 		property="boardTitle" />
		<result 		column="board_content" 	property="boardContent" />
		<result 		column="read_count" 		property="readCount" />
		<result 		column="status"					property="status" />
		<result 		column="board_category" property="boardCategory" />
		<result 		column="attachment_yn"	property="attachmentYN" />
		<result			column="profile_url"		property="profileURL" />
		<collection ofType="AttachmentDto" 	property="attachmentList">
			<id 			column="file_no" 				property="fileNo" />
			<result 	column="origin_name" 		property="originName" />
			<result 	column="enroll_date" 		property="enrollDate" />
			<result 	column="modify_name" 		property="modifyName" />
			<result 	column="attach_path" 		property="attachPath" />
			<result 	column="status" 				property="status" />
			<result 	column="ref_type" 			property="refType" />
			<result 	column="ref_no" 				property="refNo" />
		</collection>
		<!--  
		<collection	ofType="GroupDto" 			property="departmentList">
			<id				column="group_no" 			property="groupNo" />
			<result 	column="group_code"			property="groupCode" />
			<result 	column="code_name"			property="codeName" />
			<result 	column="regist_date"		property="registDate" />
			<result 	column="modify_date"		property="modifyDate" />
			<result 	column="status"					property="status" />
			<result 	column="regist_emp"			property="registEmp" />
			<result 	column="modify_emp"			property="modifyEmp" />
			<result 	column="upper_code"			property="upperCode" />
		</collection>
		-->
	</resultMap>


	<!-- 총게시글 갯수조회(STATUS ="Y") -->
	<select id="selectTotalBoardCount" parameterType="map" resultType="_int">
		select count(*) totalBoards
		  from tb_board
		  left outer join member on (user_no = tb_board.modify_emp)
		 where tb_board.status = 'Y'
		<if test="category != null">
			<choose>
				<when test="category.equals('normal')">
					and board_category is null
				</when>
				<when test="category.equals('department') and department.equals('all')">
					and board_category is not null
				</when>
				<when test="category.equals('department') and !department.equals('all')">
					and board_category = #{department}
				</when>
			</choose>
		</if>
		<if test="condition != null and keyword != null">
			<choose>
				<when test="condition.equals('all')">
					and board_title like 	 '%' || #{keyword} || '%'
					 or board_content like '%' || #{keyword} || '%'
					 or user_name like 		 '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('title')">
					and board_title like 	 '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('content')">
					and board_content like '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('writer')">
					and user_name like 		 '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
	</select>

	<!-- 게시글 목록조회 -->
	<select id="selectBoardList" parameterType="map" resultMap="boardResultMap">
		select
					 board_no
					,board_title
					,profile_url
					,user_name 			"modify_emp"
					,to_char(tb_board.modify_date, 'YYYY-MM-DD') "modify_date"
					,read_count
					,code_name 		"board_category"
					,(
						 select count(*) totalAttachments
						   from attachment
						  where status 		= 'Y'
						    and ref_type 	= 'BO'
						    and ref_no 		= tb_board.board_no
						) "attachment_yn"
			from tb_board
			left outer join member     on (user_no = regist_emp)
			left outer join tb_group   on (
                                 		 group_no = 'DEPT01' 
                                 		 and group_code = board_category
                                 		 )
			left outer join attachment on (ref_no = board_no)
     where tb_board.status = 'Y'  
     <if test="category != null">
			<choose>
				<when test="category.equals('normal')">
					and board_category is null
				</when>
				<when test="category.equals('department') and department.equals('all')">
					and board_category is not null
				</when>
				<when test="category.equals('department') and !department.equals('all')">
					and board_category = #{department}
				</when>
			</choose>
		</if>
		<if test="condition != null and keyword != null">
			<choose>
				<when test="condition.equals('all')">
					and board_title like 	 '%' || #{keyword} || '%'
					 or board_content like '%' || #{keyword} || '%'
					 or user_name like 		 '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('title')">
					and board_title like 	 '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('content')">
					and board_content like '%' || #{keyword} || '%'
				</when>
				<when test="condition.equals('writer')">
					and user_name like 		 '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>
     order by board_no desc
	</select>
	
	<!-- 게시글 등록 -->
	<insert id="insertBoard" parameterType="BoardDto">
		insert
			into tb_board
					 (
					   board_no
					  ,regist_emp
					  ,modify_emp
					  ,board_title
					  ,board_content
					  ,board_category
					 )
		values 
					(
					  seq_bno.nextval
					 ,#{registEmp}
					 ,#{modifyEmp}
					 ,#{boardTitle}
					 ,#{boardContent}
					 ,#{boardCategory}
					)
	</insert>
	
	<!-- 첨부파일 등록 -->
	<insert id="insertAttachment" parameterType="AttachmentDto">
		insert
			into attachment
					 (
					   file_no
					  ,origin_name
					  ,modify_name
					  ,attach_path
					  ,ref_type
					  ,ref_no
					 )
		values 
					(
					  seq_ano.nextval
					 ,#{originName}
					 ,#{modifyName}
					 ,#{attachPath}
					 ,#{refType}
					 ,#{refNo}
					)
	</insert>
	
	<!-- 게시글 수정 -->


  
</mapper>
