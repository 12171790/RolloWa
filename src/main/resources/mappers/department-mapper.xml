<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="departmentMapper">

	<resultMap 			id="groupResultMap" 		type="GroupDto">
		<id			column="group_code" 		property="groupCode" />
		<result 	column="code"				property="code" />
		<result 	column="code_name"			property="codeName" />
		<result 	column="regist_date"		property="registDate" />
		<result 	column="modify_date"		property="modifyDate" />
		<result 	column="status"				property="status" />
		<result 	column="regist_emp"			property="registEmp" />
		<result 	column="modify_emp"			property="modifyEmp" />
		<result 	column="upper_code"			property="upperCode" />
	</resultMap>
	
	<resultMap type="com.br.project.dto.calendar.calDepartDto" id="calDepartType">
		<result column="department" property="department" />
		<result column="total" property="total" />
		<collection ofType="MemberDto" property="member" >
			<result column="team" property="teamCode" />
			<result column="user_name" property="userName" />
			<result column="POSITION_CODE" property="positionCode" />
		</collection>
	</resultMap>

  <!-- 부서 목록조회 -->
	<select id="selectDepartmentList" resultMap="groupResultMap" parameterType="java.util.Map">
		select 
			   group_code		
			  ,code	
			  ,code_name
			  ,upper_code	
		  from tb_group
		 where status 		= 'Y'
		   and group_code = #{code}
		   <if test="upperCode != null">
		   and upper_code = #{upperCode}
		   </if>
		 order by code
	</select>
	
	<select id="selectTeam" resultMap="calDepartType">
		select
		      d.code_name department 
		     , t.code_name team
		     , (select count(*) from member where t.code = TEAM_CODE group by(TEAM_CODE)) total
		     , m.user_name
		     , (select code_name from tb_group where code = m.position_code and group_code = 'POSI01') POSITION_CODE
		     , (select code from tb_group where code = m.position_code and group_code = 'POSI01') code
		from tb_group d
		join (select * from tb_group where group_code = 'TEAM01') t on t.upper_code = d.code
		join member m on ( team_code = t.code)
		where d.group_code = 'DEPT01'
		order by department desc, team, code desc
	</select>
	
	<!-- ========================== "가림" 영역 ========================== -->
	<!-- 팀의 부서명 조회 -->
	<select id="selectUppderCode" resultMap="groupResultMap" parameterType="hashmap">
		select
			   group_code
			  ,code
			  ,code_name
		  from tb_group
		 where group_code like #{upperGroupCode}
		   and code = (
					   				select upper_code
					   				  from tb_group
					   				 where group_code like #{groupCode}
					   				   and code = #{code}
		   			   		)
	</select>
	
	<!-- ========================== "가림" 영역 ========================== -->
	
	<!-- ========================== "기웅" 영역 ========================== -->	
	
	<!-- ========================== "기웅" 영역 ========================== -->
	
</mapper>
